{"version":3,"sources":["src/screens/HomeScreen.js","src/screens/SquareScreen.js","src/components/TouchTemplate.js","src/screens/ChangeScreen.js","src/screens/PrintScreen.js","App.js"],"names":["styles","StyleSheet","create","container","flex","backgroundColor","wraperAll","justifyContent","margin","padding","borderWidth","borderColor","borderRadius","headingBox","marginBottom","wraper","marginTop","textBox","textHeading","textAlign","color","fontSize","text","HomeScreen","navigation","View","style","Text","Button","title","onPress","navigate","randomColors","arr","rgb","map","i","Math","floor","random","list","position","top","left","bottom","right","SquareScreen","useState","colors","setColors","itemSize","Dimensions","get","width","FlatList","keyExtractor","item","data","numColumns","getItemLayout","index","length","offset","renderItem","height","button","insideBox","opacity","TouchTemplate","colorUp","colorDown","TouchableOpacity","zIndex","ChangeScreen","green","setGreen","yellow","setYellow","blue","setBlue","isValid","inputBox","paddingBottom","showBox","h1","h2","fontWeight","input","PrintScreen","setText","TextInput","autoCapitalise","autoCorrect","value","onChangeText","newText","fontFamily","numberOfLines","ellipsizeMode","navigator","createStackNavigator","initialRouteName","defaultNavigationOptions","headerStyle","headerTintColor","headerTitleStyle","createAppContainer"],"mappings":"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","file":"static/js/app.45d22cc6.chunk.js","sourcesContent":["import React from 'react'\nimport { Text, View, Button, StyleSheet } from 'react-native'\n\nconst HomeScreen = ({navigation}) => {\n  return (\n    <View style={styles.container}>\n      <View style={styles.wraperAll}>\n        <View style={styles.headingBox}>\n            <Text style={styles.textHeading}>\n              This small app displays my first experience with the concept of \"state\" in React and examples of its usage.\n            </Text>\n        </View>\n        <View style={styles.wraper}>\n          <View style={styles.textBox}>\n            <Text style={styles.text}>\n             Every time you press the button, a new square with random color will appear.\n            </Text>\n          </View>\n          <Button\n            title=\"GO TO COLOR SQUARES!\"\n            onPress={() => navigation.navigate('Square')}\n          />\n        </View>\n        <View style={styles.wraper}>\n          <View style={styles.textBox}>\n            <Text style={styles.text}>\n              Every time you touch the screen, it will change its color in a different tone, depending on the place of touch.\n            </Text>\n          </View>\n          <Button\n            title=\"GO TO CHANGE THE SCREEN COLOR!\"\n            onPress={() => navigation.navigate('Change')}\n          />\n        </View>\n        <View style={styles.wraper}>\n          <View style={styles.textBox}>\n            <Text style={styles.text}>\n              Check how the printed text will look in five different fonts and choose the best one.\n            </Text>\n          </View>\n          <Button\n            title=\"GO TO PRINT SOMETHING!\"\n            onPress={() => navigation.navigate('Print')}\n          />\n        </View>\n      </View>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#eceff1',\n  },\n  wraperAll: {\n    flex: 1,\n    justifyContent: 'space-evenly',\n    margin: 3,\n    padding: 5,\n    borderWidth: 1,\n    borderColor: 'transparent',\n    borderRadius: 15,\n    backgroundColor: '#cfd8dc',\n  },\n    headingBox: {\n    backgroundColor: '#006db3',\n    marginBottom: 0, \n    borderWidth: 1,\n    borderColor: 'transparent',\n    borderRadius: 15,\n  },\n  wraper: {\n    marginTop: 10,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: 'transparent',\n    borderRadius: 15,\n    backgroundColor: '#b0bec5',\n  },\n  textBox: {\n    marginBottom: 10,\n    backgroundColor: '#006db3',\n    borderWidth: 1,\n    borderColor: 'transparent',\n    borderRadius: 10,\n  },\n    textHeading: {\n    textAlign: 'center',\n    color: \"#fff\",\n    fontSize: 19,\n    margin:10,\n  },\n  text: {\n    textAlign: 'center',\n    color: \"#fff\",\n    fontSize: 17,\n    margin:10,\n  },\n})\n\nexport default HomeScreen","import React, { useState } from 'react'\r\nimport { View, StyleSheet, Button, FlatList } from 'react-native'\r\nimport { Dimensions } from 'react-native'\r\n\r\nconst SquareScreen = () => {\r\n  const [colors, setColors] = useState([])\r\n\r\n  const itemSize = Dimensions.get('window').width / 5;\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <FlatList\r\n        style={styles.list}\r\n        keyExtractor={item => item}\r\n        data={colors}\r\n        numColumns={5}\r\n        getItemLayout={(data, index) => (\r\n          {length: itemSize, offset: itemSize * index, index}\r\n        )}\r\n        renderItem={({ item }) => {\r\n          return (\r\n            <View style={{height: itemSize, width: itemSize, backgroundColor: item}} />\r\n          )\r\n        }}\r\n      />\r\n      <Button\r\n        style={styles.button}\r\n        title=\"Add a Color\"\r\n        onPress={() => setColors([...colors, randomColors()])}\r\n      />\r\n    </View>\r\n  )\r\n}\r\n\r\nconst randomColors = (arr = [0, 0, 0]) => {\r\n  let rgb = arr.map(i => arr[i] = Math.floor(Math.random() * 256))\r\n  return `rgb(${rgb[0]}, ${rgb[1]}, ${rgb[2]})`\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'flex-end'\r\n  },\r\n  list: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    bottom: 0,\r\n    right: 0,\r\n  }\r\n})\r\n\r\nexport default SquareScreen","import React from 'react'\r\nimport { View, Text, StyleSheet, TouchableOpacity } from 'react-native'\r\n\r\nconst TouchTemplate = ({ color, colorUp, colorDown }) => {\r\n  return (\r\n\r\n    <View style={styles.container}>\r\n      <Text style={{color: \"transparent\"}}>{color}</Text>\r\n      <TouchableOpacity\r\n        style={styles.insideBox}\r\n        onPress={() => colorUp()}\r\n      >\r\n        <Text></Text>\r\n      </TouchableOpacity>\r\n      <TouchableOpacity\r\n        onPress={() => colorDown()}\r\n        style={styles.insideBox}\r\n      >\r\n        <Text></Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  )\r\n}\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1\r\n  },\r\n  insideBox: {\r\n    flex: 1,\r\n    opacity: 0,\r\n    backgroundColor: 'transparent'\r\n  }\r\n})\r\n\r\nexport default TouchTemplate\r\n","import React, { useState } from 'react'\nimport { Text, View, StyleSheet, Button } from 'react-native'\nimport TouchTemplate from '../components/TouchTemplate'\n\nconst ChangeScreen = () => {\n  const STEP = 15\n\n  const [green, setGreen] = useState(200)\n  const [yellow, setYellow] = useState(200)\n  const [blue, setBlue] = useState(200)\n\n  let isValid = (color) => {\n    return (color > 255) ? color -= 255 :\n      (color < 0) ? color += 255 :\n         color\n  }\n\n  return (\n\n    <View\n      style={{\n        backgroundColor: `rgb(${green}, ${yellow}, ${blue})`,\n        flex: 1,\n        zIndex: 0\n      }}>\n      <TouchTemplate\n        color=\"green\"\n        style={styles.button}\n        colorUp={() => setGreen(isValid(green + STEP))}\n        colorDown={() => setGreen(isValid(green - STEP))}\n      />\n      <TouchTemplate\n        color=\"yellow\"\n        style={styles.button}\n        colorUp={() => setYellow(isValid(yellow + STEP))}\n        colorDown={() => setYellow(isValid(yellow - STEP))}\n      />\n      <TouchTemplate\n        color=\"blue\"\n        style={styles.button}\n        colorUp={() => setBlue(isValid(blue + STEP))}\n        colorDown={() => setBlue(isValid(blue - STEP))}\n      />\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    zIndex: 0\n  },\n  button: {\n    flex: 1,\n    zIndex: 5,\n  }\n})\n\nexport default ChangeScreen\n","import React, { useState } from 'react'\nimport { Text, View, StyleSheet, TextInput } from 'react-native'\n\nconst PrintScreen = () => {\n  const [text, setText] = useState(' ')\n  \n  return (\n    <View style={styles.wraper}>\n      <View style={styles.inputBox}>\n          <Text style={styles.h1}>\n            Check your text using different fonts.\n          </Text>\n          <Text style={styles.h2}>\n            Please enter your text here:\n          </Text>\n          <TextInput \n            style={styles.input}\n            autoCapitalise=\"none\"\n            autoCorrect={false}\n            value={text}\n            onChangeText={newText => setText(newText)}\n          />\n        </View>\n      <View style={styles.container}>\n        <View style={styles.showBox}>\n          <Text style={styles.h2}>\n            serif:\n          </Text >\n          <Text \n            style={{fontFamily: 'serif', fontSize: 17, color: '#29434e'}}\n            numberOfLines={4}\n            ellipsizeMode=\"clip\"\n          >\n            {text}\n          </Text>\n        </View>\n        <View style={styles.showBox}>\n          <Text style={styles.h2}>\n            monospace:\n          </Text>\n          <Text \n            style={{fontFamily: 'monospace', fontSize: 17, color: '#29434e'}}\n            numberOfLines={4}\n            ellipsizeMode=\"clip\"\n          >\n            {text}\n          </Text>\n        </View>\n        <View style={styles.showBox}>\n           <Text style={styles.h2}>\n             sans-serif:\n           </Text>\n           <Text \n              style={{fontFamily: 'sans-serif', fontSize: 17, color: '#29434e'}}\n              numberOfLines={4}\n              ellipsizeMode=\"clip\"\n            >\n             {text}\n           </Text>\n        </View>\n        <View style={styles.showBox}>\n          <Text style={styles.h2}>\n            notoserif:\n          </Text >\n          <Text \n            style={{fontFamily: 'notoserif', fontSize: 17, color: '#29434e'}}\n            numberOfLines={4}\n            ellipsizeMode=\"clip\" \n          >\n            {text}\n          </Text>\n        </View>\n      </View>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  wraper:{\n    flex: 1,\n    justifyContent: 'flex-start',\n    backgroundColor: '#fff'\n  },\n  container: {\n    flex: 1,\n    margin: 3,\n    marginTop: 0,\n    padding: 5,\n    borderWidth: 1,\n    borderColor: 'transparent',\n    borderRadius: 10,\n    backgroundColor: '#eeeeee',\n  },\n  inputBox: {\n    margin: 3,\n    padding: 6,\n    paddingBottom: 8,\n    textAlign: 'center',\n    borderWidth: 1,\n    borderColor: 'transparent',\n    borderRadius: 10,\n    backgroundColor: '#e0e0e0',\n  },\n  showBox: {\n    flex: 1,\n    padding: 5,\n    marginBottom: 5,\n    borderWidth: 1,\n    borderColor: 'transparent',\n    borderRadius: 10,\n    backgroundColor: '#e0e0e0',\n  },\n  h1: {\n    fontSize: 20,\n    color: '#34515e',\n    textAlign: 'center',\n    marginBottom: 5,\n  },\n  h2: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#607d8b',\n  },\n  input: {\n    padding: 2,\n    borderWidth: 2,\n    borderColor: '#607d8b',\n    borderRadius: 5,\n    backgroundColor: '#fafafa',\n  }\n})\n\nexport default PrintScreen\n","import { createAppContainer } from 'react-navigation'\nimport { createStackNavigator } from 'react-navigation-stack'\nimport HomeScreen from './src/screens/HomeScreen'\nimport SquareScreen from './src/screens/SquareScreen'\nimport ChangeScreen from './src/screens/ChangeScreen'\nimport PrintScreen from './src/screens/PrintScreen'\n\n\nconst navigator = createStackNavigator(\n  {\n    \"Home\": HomeScreen,\n    \"Square\": SquareScreen,\n    \"Change\": ChangeScreen,\n    \"Print\": PrintScreen\n  },\n  {\n    initialRouteName: \"Home\",\n    defaultNavigationOptions: {\n      title: \"myDemoApp\",\n      headerStyle: {\n        backgroundColor: '#006db3',\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        fontSize: 22,\n      },\n    }\n  }\n)\n\nexport default createAppContainer(navigator);\n"],"sourceRoot":""}